{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\amand\\\\OneDrive\\\\Desktop\\\\Social\\\\create-social-network\\\\hellobaby\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  subscription {\\n    notificationCreatedOrDeleted {\\n      operation\\n      notification {\\n        \", \"\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($input: UpdateNotificationSeenInput!) {\\n    updateNotificationSeen(input: $input)\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  query($userId: ID!, $skip: Int, $limit: Int) {\\n    getUserNotifications(userId: $userId, skip: $skip, limit: $limit) {\\n      count\\n      notifications {\\n        \", \"\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($input: DeleteNotificationInput!) {\\n    deleteNotification(input: $input) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($input: CreateNotificationInput!) {\\n    createNotification(input: $input) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\n/**\r\n * Records to select from notifications\r\n */\n\nvar notificationPayload = \"\\n  id\\n  createdAt\\n  author {\\n    id\\n    fullName\\n    username\\n    image\\n  }\\n  follow {\\n    id\\n  }\\n  comment {\\n    id\\n    post {\\n      id\\n      image\\n    }\\n  }\\n  like {\\n    id\\n    post {\\n      id\\n      image\\n    }\\n  }\\n\";\n/**\r\n * Creates a notification for user\r\n */\n\nexport var CREATE_NOTIFICATION = gql(_templateObject());\n/**\r\n * Deletes a notification\r\n */\n\nexport var DELETE_NOTIFICATION = gql(_templateObject2());\n/**\r\n * Gets notifications for user\r\n */\n\nexport var GET_USER_NOTIFICATION = gql(_templateObject3(), notificationPayload);\n/**\r\n * Updates notification seen property\r\n */\n\nexport var UPDATE_NOTIFICATION_SEEN = gql(_templateObject4());\n/**\r\n * Get user's notifications in real time\r\n */\n\nexport var NOTIFICATION_CREATED_OR_DELETED = gql(_templateObject5(), notificationPayload);","map":{"version":3,"sources":["C:/Users/amand/OneDrive/Desktop/Social/create-social-network/hellobaby/frontend/src/graphql/notification.js"],"names":["gql","notificationPayload","CREATE_NOTIFICATION","DELETE_NOTIFICATION","GET_USER_NOTIFICATION","UPDATE_NOTIFICATION_SEEN","NOTIFICATION_CREATED_OR_DELETED"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA;;;;AAGA,IAAMC,mBAAmB,wPAAzB;AA4BA;;;;AAGA,OAAO,IAAMC,mBAAmB,GAAGF,GAAH,mBAAzB;AAQP;;;;AAGA,OAAO,IAAMG,mBAAmB,GAAGH,GAAH,oBAAzB;AAQP;;;;AAGA,OAAO,IAAMI,qBAAqB,GAAGJ,GAAH,qBAKxBC,mBALwB,CAA3B;AAWP;;;;AAGA,OAAO,IAAMI,wBAAwB,GAAGL,GAAH,oBAA9B;AAMP;;;;AAGA,OAAO,IAAMM,+BAA+B,GAAGN,GAAH,qBAKlCC,mBALkC,CAArC","sourcesContent":["import gql from 'graphql-tag';\r\n\r\n/**\r\n * Records to select from notifications\r\n */\r\nconst notificationPayload = `\r\n  id\r\n  createdAt\r\n  author {\r\n    id\r\n    fullName\r\n    username\r\n    image\r\n  }\r\n  follow {\r\n    id\r\n  }\r\n  comment {\r\n    id\r\n    post {\r\n      id\r\n      image\r\n    }\r\n  }\r\n  like {\r\n    id\r\n    post {\r\n      id\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Creates a notification for user\r\n */\r\nexport const CREATE_NOTIFICATION = gql`\r\n  mutation($input: CreateNotificationInput!) {\r\n    createNotification(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Deletes a notification\r\n */\r\nexport const DELETE_NOTIFICATION = gql`\r\n  mutation($input: DeleteNotificationInput!) {\r\n    deleteNotification(input: $input) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Gets notifications for user\r\n */\r\nexport const GET_USER_NOTIFICATION = gql`\r\n  query($userId: ID!, $skip: Int, $limit: Int) {\r\n    getUserNotifications(userId: $userId, skip: $skip, limit: $limit) {\r\n      count\r\n      notifications {\r\n        ${notificationPayload}\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Updates notification seen property\r\n */\r\nexport const UPDATE_NOTIFICATION_SEEN = gql`\r\n  mutation($input: UpdateNotificationSeenInput!) {\r\n    updateNotificationSeen(input: $input)\r\n  }\r\n`;\r\n\r\n/**\r\n * Get user's notifications in real time\r\n */\r\nexport const NOTIFICATION_CREATED_OR_DELETED = gql`\r\n  subscription {\r\n    notificationCreatedOrDeleted {\r\n      operation\r\n      notification {\r\n        ${notificationPayload}\r\n      }\r\n    }\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}