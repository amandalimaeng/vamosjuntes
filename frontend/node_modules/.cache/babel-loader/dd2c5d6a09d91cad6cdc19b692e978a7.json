{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\amand\\\\OneDrive\\\\Desktop\\\\Social\\\\create-social-network\\\\hellobaby\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\amand\\\\OneDrive\\\\Desktop\\\\Social\\\\create-social-network\\\\hellobaby\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\amand\\\\OneDrive\\\\Desktop\\\\Social\\\\create-social-network\\\\hellobaby\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\amand\\\\OneDrive\\\\Desktop\\\\Social\\\\create-social-network\\\\hellobaby\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\amand\\\\OneDrive\\\\Desktop\\\\Social\\\\create-social-network\\\\hellobaby\\\\frontend\\\\src\\\\pages\\\\Profile\\\\ProfileImageUpload.js\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100%;\\n  object-fit: cover;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  width: 180px;\\n  height: 180px;\\n  display: block;\\n  overflow: hidden;\\n  cursor: \", \";\\n  border-radius: 50%;\\n  border: 4px solid \", \";\\n  background-color: \", \";\\n\\n  &:hover \", \" {\\n    opacity: 1;\\n    visibility: visible;\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  position: absolute;\\n  width: 100%;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  visibility: hidden;\\n  border-radius: 50%;\\n  background-color: rgba(0, 0, 0, 0.6);\\n  color: \", \";\\n  opacity: 0;\\n  transition: visibility 0.2s linear, opacity 0.2s linear;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: none;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { withApollo } from 'react-apollo';\nimport { Loading } from 'components/Loading';\nimport { UserIcon } from 'components/icons';\nimport { GET_AUTH_USER, GET_USER, UPLOAD_PHOTO } from 'graphql/user';\nimport { GET_FOLLOWED_POSTS } from 'graphql/post';\nimport { MAX_USER_PROFILE_IMAGE_SIZE } from 'constants/ImageSize';\nimport { useGlobalMessage } from 'hooks/useGlobalMessage';\nimport { useStore } from 'store';\nvar Input = styled.input(_templateObject());\nvar Overlay = styled.div(_templateObject2(), function (p) {\n  return p.theme.colors.white;\n});\nvar Label = styled.label(_templateObject3(), function (p) {\n  return p.authUser && 'pointer';\n}, function (p) {\n  return p.theme.colors.border.main;\n}, function (p) {\n  return p.theme.colors.white;\n}, Overlay);\nvar Image = styled.img(_templateObject4());\n/**\r\n * Displays and Updates user profile image\r\n */\n\nvar ProfileImageUpload = function ProfileImageUpload(_ref) {\n  var userId = _ref.userId,\n      image = _ref.image,\n      imagePublicId = _ref.imagePublicId,\n      username = _ref.username,\n      client = _ref.client;\n\n  var _useStore = useStore(),\n      _useStore2 = _slicedToArray(_useStore, 1),\n      auth = _useStore2[0].auth;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var message = useGlobalMessage();\n\n  var handleImageChange =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      var file;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              file = e.target.files[0];\n              e.target.value = '';\n\n              if (file) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 5:\n              if (!(file.size >= MAX_USER_PROFILE_IMAGE_SIZE)) {\n                _context.next = 9;\n                break;\n              }\n\n              setLoading(false);\n              message.error(\"File size should be less then \".concat(MAX_USER_PROFILE_IMAGE_SIZE / 1000000, \"MB\"));\n              return _context.abrupt(\"return\");\n\n            case 9:\n              _context.prev = 9;\n              _context.next = 12;\n              return client.mutate({\n                mutation: UPLOAD_PHOTO,\n                variables: {\n                  input: {\n                    id: auth.user.id,\n                    image: file,\n                    imagePublicId: imagePublicId\n                  }\n                },\n                refetchQueries: function refetchQueries() {\n                  return [{\n                    query: GET_FOLLOWED_POSTS,\n                    variables: {\n                      userId: auth.user.id\n                    }\n                  }, {\n                    query: GET_AUTH_USER\n                  }, {\n                    query: GET_USER,\n                    variables: {\n                      username: auth.user.username\n                    }\n                  }];\n                }\n              });\n\n            case 12:\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](9);\n              message.error(_context.t0.graphQLErrors[0].message);\n\n            case 17:\n              setLoading(false);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[9, 14]]);\n    }));\n\n    return function handleImageChange(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var renderProfileImage = function renderProfileImage() {\n    if (loading) {\n      return React.createElement(Loading, {\n        top: \"xl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      });\n    }\n\n    return image ? React.createElement(Image, {\n      src: image,\n      alt: \"profile\",\n      accept: \"image/x-png,image/jpeg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }) : React.createElement(UserIcon, {\n      width: \"172\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    });\n  };\n\n  var authUser = auth.user.id === userId;\n  return React.createElement(React.Fragment, null, authUser && React.createElement(Input, {\n    name: \"image\",\n    type: \"file\",\n    id: \"image\",\n    accept: \"image/x-png,image/jpeg\",\n    onChange: handleImageChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(Label, {\n    authUser: authUser,\n    htmlFor: \"image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, authUser && React.createElement(Overlay, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, image ? 'Update' : 'Upload'), renderProfileImage()));\n};\n\nProfileImageUpload.propTypes = {\n  image: PropTypes.string,\n  imagePublicId: PropTypes.string,\n  userId: PropTypes.string.isRequired,\n  client: PropTypes.object.isRequired\n};\nexport default withApollo(ProfileImageUpload);","map":{"version":3,"sources":["C:/Users/amand/OneDrive/Desktop/Social/create-social-network/hellobaby/frontend/src/pages/Profile/ProfileImageUpload.js"],"names":["React","useState","PropTypes","styled","withApollo","Loading","UserIcon","GET_AUTH_USER","GET_USER","UPLOAD_PHOTO","GET_FOLLOWED_POSTS","MAX_USER_PROFILE_IMAGE_SIZE","useGlobalMessage","useStore","Input","input","Overlay","div","p","theme","colors","white","Label","label","authUser","border","main","Image","img","ProfileImageUpload","userId","image","imagePublicId","username","client","auth","loading","setLoading","message","handleImageChange","e","file","target","files","value","size","error","mutate","mutation","variables","id","user","refetchQueries","query","graphQLErrors","renderProfileImage","propTypes","string","isRequired","object"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { withApollo } from 'react-apollo';\r\n\r\nimport { Loading } from 'components/Loading';\r\nimport { UserIcon } from 'components/icons';\r\n\r\nimport { GET_AUTH_USER, GET_USER, UPLOAD_PHOTO } from 'graphql/user';\r\nimport { GET_FOLLOWED_POSTS } from 'graphql/post';\r\n\r\nimport { MAX_USER_PROFILE_IMAGE_SIZE } from 'constants/ImageSize';\r\n\r\nimport { useGlobalMessage } from 'hooks/useGlobalMessage';\r\n\r\nimport { useStore } from 'store';\r\n\r\nconst Input = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  visibility: hidden;\r\n  border-radius: 50%;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  color: ${p => p.theme.colors.white};\r\n  opacity: 0;\r\n  transition: visibility 0.2s linear, opacity 0.2s linear;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  position: relative;\r\n  width: 180px;\r\n  height: 180px;\r\n  display: block;\r\n  overflow: hidden;\r\n  cursor: ${p => p.authUser && 'pointer'};\r\n  border-radius: 50%;\r\n  border: 4px solid ${p => p.theme.colors.border.main};\r\n  background-color: ${p => p.theme.colors.white};\r\n\r\n  &:hover ${Overlay} {\r\n    opacity: 1;\r\n    visibility: visible;\r\n  }\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\n/**\r\n * Displays and Updates user profile image\r\n */\r\nconst ProfileImageUpload = ({\r\n  userId,\r\n  image,\r\n  imagePublicId,\r\n  username,\r\n  client,\r\n}) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const message = useGlobalMessage();\r\n\r\n  const handleImageChange = async e => {\r\n    setLoading(true);\r\n\r\n    const file = e.target.files[0];\r\n    e.target.value = '';\r\n\r\n    if (!file) return;\r\n\r\n    if (file.size >= MAX_USER_PROFILE_IMAGE_SIZE) {\r\n      setLoading(false);\r\n      message.error(\r\n        `File size should be less then ${MAX_USER_PROFILE_IMAGE_SIZE /\r\n          1000000}MB`\r\n      );\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await client.mutate({\r\n        mutation: UPLOAD_PHOTO,\r\n        variables: { input: { id: auth.user.id, image: file, imagePublicId } },\r\n        refetchQueries: () => [\r\n          { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\r\n          { query: GET_AUTH_USER },\r\n          { query: GET_USER, variables: { username: auth.user.username } },\r\n        ],\r\n      });\r\n    } catch (err) {\r\n      message.error(err.graphQLErrors[0].message);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const renderProfileImage = () => {\r\n    if (loading) {\r\n      return <Loading top=\"xl\" />;\r\n    }\r\n\r\n    return image ? (\r\n      <Image src={image} alt=\"profile\" accept=\"image/x-png,image/jpeg\" />\r\n    ) : (\r\n      <UserIcon width=\"172\" />\r\n    );\r\n  };\r\n\r\n  const authUser = auth.user.id === userId;\r\n\r\n  return (\r\n    <>\r\n      {authUser && (\r\n        <Input\r\n          name=\"image\"\r\n          type=\"file\"\r\n          id=\"image\"\r\n          accept=\"image/x-png,image/jpeg\"\r\n          onChange={handleImageChange}\r\n        />\r\n      )}\r\n\r\n      <Label authUser={authUser} htmlFor=\"image\">\r\n        {authUser && <Overlay>{image ? 'Update' : 'Upload'}</Overlay>}\r\n\r\n        {renderProfileImage()}\r\n      </Label>\r\n    </>\r\n  );\r\n};\r\n\r\nProfileImageUpload.propTypes = {\r\n  image: PropTypes.string,\r\n  imagePublicId: PropTypes.string,\r\n  userId: PropTypes.string.isRequired,\r\n  client: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withApollo(ProfileImageUpload);\r\n"]},"metadata":{},"sourceType":"module"}