{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\amand\\\\OneDrive\\\\Desktop\\\\Social\\\\create-social-network\\\\hellobaby\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($input: UpdateMessageSeenInput!) {\\n    updateMessageSeen(input: $input)\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  subscription {\\n    newConversation {\\n      id\\n      username\\n      fullName\\n      image\\n      isOnline\\n      seen\\n      lastMessage\\n      lastMessageSender\\n      lastMessageCreatedAt\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($input: CreateMessageInput!) {\\n    createMessage(input: $input) {\\n      id\\n      isFirstMessage\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  subscription($authUserId: ID!, $userId: ID!) {\\n    messageCreated(authUserId: $authUserId, userId: $userId) {\\n      id\\n      receiver {\\n        id\\n        username\\n        fullName\\n        image\\n        createdAt\\n      }\\n      sender {\\n        id\\n        username\\n        fullName\\n        image\\n        createdAt\\n      }\\n      message\\n      createdAt\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($authUserId: ID!, $userId: ID!) {\\n    getMessages(authUserId: $authUserId, userId: $userId) {\\n      id\\n      receiver {\\n        id\\n        username\\n        fullName\\n        image\\n        createdAt\\n      }\\n      sender {\\n        id\\n        username\\n        fullName\\n        image\\n        createdAt\\n      }\\n      message\\n      createdAt\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\n/**\r\n * Gets user's specific conversation\r\n */\n\nexport var GET_MESSAGES = gql(_templateObject());\n/**\r\n * Gets user's specific conversation in real time\r\n */\n\nexport var GET_MESSAGES_SUBSCRIPTION = gql(_templateObject2());\n/**\r\n * Creates a message\r\n */\n\nexport var CREATE_MESSAGE = gql(_templateObject3());\n/**\r\n * Get user's new conversation in real time\r\n */\n\nexport var GET_NEW_CONVERSATIONS_SUBSCRIPTION = gql(_templateObject4());\n/**\r\n * Updates message seen property\r\n */\n\nexport var UPDATE_MESSAGE_SEEN = gql(_templateObject5());","map":{"version":3,"sources":["C:/Users/amand/OneDrive/Desktop/Social/create-social-network/hellobaby/frontend/src/graphql/messages.js"],"names":["gql","GET_MESSAGES","GET_MESSAGES_SUBSCRIPTION","CREATE_MESSAGE","GET_NEW_CONVERSATIONS_SUBSCRIPTION","UPDATE_MESSAGE_SEEN"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA;;;;AAGA,OAAO,IAAMC,YAAY,GAAGD,GAAH,mBAAlB;AAwBP;;;;AAGA,OAAO,IAAME,yBAAyB,GAAGF,GAAH,oBAA/B;AAwBP;;;;AAGA,OAAO,IAAMG,cAAc,GAAGH,GAAH,oBAApB;AASP;;;;AAGA,OAAO,IAAMI,kCAAkC,GAAGJ,GAAH,oBAAxC;AAgBP;;;;AAGA,OAAO,IAAMK,mBAAmB,GAAGL,GAAH,oBAAzB","sourcesContent":["import gql from 'graphql-tag';\r\n\r\n/**\r\n * Gets user's specific conversation\r\n */\r\nexport const GET_MESSAGES = gql`\r\n  query($authUserId: ID!, $userId: ID!) {\r\n    getMessages(authUserId: $authUserId, userId: $userId) {\r\n      id\r\n      receiver {\r\n        id\r\n        username\r\n        fullName\r\n        image\r\n        createdAt\r\n      }\r\n      sender {\r\n        id\r\n        username\r\n        fullName\r\n        image\r\n        createdAt\r\n      }\r\n      message\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Gets user's specific conversation in real time\r\n */\r\nexport const GET_MESSAGES_SUBSCRIPTION = gql`\r\n  subscription($authUserId: ID!, $userId: ID!) {\r\n    messageCreated(authUserId: $authUserId, userId: $userId) {\r\n      id\r\n      receiver {\r\n        id\r\n        username\r\n        fullName\r\n        image\r\n        createdAt\r\n      }\r\n      sender {\r\n        id\r\n        username\r\n        fullName\r\n        image\r\n        createdAt\r\n      }\r\n      message\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Creates a message\r\n */\r\nexport const CREATE_MESSAGE = gql`\r\n  mutation($input: CreateMessageInput!) {\r\n    createMessage(input: $input) {\r\n      id\r\n      isFirstMessage\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Get user's new conversation in real time\r\n */\r\nexport const GET_NEW_CONVERSATIONS_SUBSCRIPTION = gql`\r\n  subscription {\r\n    newConversation {\r\n      id\r\n      username\r\n      fullName\r\n      image\r\n      isOnline\r\n      seen\r\n      lastMessage\r\n      lastMessageSender\r\n      lastMessageCreatedAt\r\n    }\r\n  }\r\n`;\r\n\r\n/**\r\n * Updates message seen property\r\n */\r\nexport const UPDATE_MESSAGE_SEEN = gql`\r\n  mutation($input: UpdateMessageSeenInput!) {\r\n    updateMessageSeen(input: $input)\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}