{"ast":null,"code":"import { useEffect } from 'react';\n/**\r\n * React hook that detects click outside an element\r\n *\r\n * @param {node} ref, element to detect click outside\r\n * @param {func} handler, function for invoking when click outside element is detected\r\n */\n\nexport var useClickOutside = function useClickOutside(ref, handler) {\n  useEffect(function () {\n    document.addEventListener('click', handleClickOutside, false);\n    return function () {\n      document.removeEventListener('click', handleClickOutside, false);\n    };\n  });\n\n  var handleClickOutside = function handleClickOutside(event) {\n    if (ref.current && !ref.current.contains(event.target)) {\n      handler();\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/amand/OneDrive/Desktop/Social/create-social-network/hellobaby/frontend/src/hooks/useClickOutside.js"],"names":["useEffect","useClickOutside","ref","handler","document","addEventListener","handleClickOutside","removeEventListener","event","current","contains","target"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA;;;;;;;AAMA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAMC,OAAN,EAAkB;AAC/CH,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCC,kBAAnC,EAAuD,KAAvD;AAEA,WAAO,YAAM;AACXF,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,EAAsCD,kBAAtC,EAA0D,KAA1D;AACD,KAFD;AAGD,GANQ,CAAT;;AAQA,MAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAE,KAAK,EAAI;AAClC,QAAIN,GAAG,CAACO,OAAJ,IAAe,CAACP,GAAG,CAACO,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EAAwD;AACtDR,MAAAA,OAAO;AACR;AACF,GAJD;AAKD,CAdM","sourcesContent":["import { useEffect } from 'react';\r\n\r\n/**\r\n * React hook that detects click outside an element\r\n *\r\n * @param {node} ref, element to detect click outside\r\n * @param {func} handler, function for invoking when click outside element is detected\r\n */\r\nexport const useClickOutside = (ref, handler) => {\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClickOutside, false);\r\n\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside, false);\r\n    };\r\n  });\r\n\r\n  const handleClickOutside = event => {\r\n    if (ref.current && !ref.current.contains(event.target)) {\r\n      handler();\r\n    }\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}