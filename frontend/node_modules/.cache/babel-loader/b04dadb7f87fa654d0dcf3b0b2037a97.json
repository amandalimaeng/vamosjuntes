{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\amand\\\\OneDrive\\\\Desktop\\\\Social\\\\create-social-network\\\\hellobaby\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\amand\\\\OneDrive\\\\Desktop\\\\Social\\\\create-social-network\\\\hellobaby\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\amand\\\\OneDrive\\\\Desktop\\\\Social\\\\create-social-network\\\\hellobaby\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\amand\\\\OneDrive\\\\Desktop\\\\Social\\\\create-social-network\\\\hellobaby\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\amand\\\\OneDrive\\\\Desktop\\\\Social\\\\create-social-network\\\\hellobaby\\\\frontend\\\\src\\\\pages\\\\Profile\\\\ProfileCoverUpload.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  overflow: hidden;\\n  cursor: pointer;\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  left: \", \";\\n  top: \", \";\\n  padding: \", \" \", \";\\n  border-radius: \", \";\\n  transition: background-color 0.4s;\\n  background-color: rgba(0, 0, 0, 0.6);\\n\\n  &:hover {\\n    background-color: rgba(0, 0, 0, 0.8);\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: none;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 350px;\\n  position: relative;\\n  background-image: url(\", \");\\n  background-size: cover;\\n  background-position: center;\\n  border-bottom-left-radius: \", \";\\n  border-bottom-right-radius: \", \";\\n  box-shadow: \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { withApollo } from 'react-apollo';\nimport { UploadImageIcon } from 'components/icons';\nimport { Loading } from 'components/Loading';\nimport { MAX_USER_COVER_IMAGE_SIZE } from 'constants/ImageSize';\nimport { GET_AUTH_USER, GET_USER, UPLOAD_PHOTO } from 'graphql/user';\nimport { GET_FOLLOWED_POSTS } from 'graphql/post';\nimport defaultBackgroundImage from './background.jpg';\nimport { useStore } from 'store';\nimport { useGlobalMessage } from 'hooks/useGlobalMessage';\nvar Root = styled.div(_templateObject(), function (p) {\n  return p.image ? p.image : defaultBackgroundImage;\n}, function (p) {\n  return p.theme.radius.md;\n}, function (p) {\n  return p.theme.radius.md;\n}, function (p) {\n  return p.theme.shadows.sm;\n});\nvar Input = styled.input(_templateObject2());\nvar Label = styled.label(_templateObject3(), function (p) {\n  return p.theme.spacing.sm;\n}, function (p) {\n  return p.theme.spacing.sm;\n}, function (p) {\n  return p.theme.spacing.xxs;\n}, function (p) {\n  return p.theme.spacing.xs;\n}, function (p) {\n  return p.theme.radius.sm;\n});\n/**\r\n * Displays and Updates user Cover image\r\n */\n\nvar ProfileCoverUpload = function ProfileCoverUpload(_ref) {\n  var client = _ref.client,\n      coverImagePublicId = _ref.coverImagePublicId,\n      coverImage = _ref.coverImage,\n      userId = _ref.userId;\n\n  var _useStore = useStore(),\n      _useStore2 = _slicedToArray(_useStore, 1),\n      auth = _useStore2[0].auth;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var message = useGlobalMessage();\n\n  var handleImageChange =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      var file;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              file = e.target.files[0];\n              e.target.value = '';\n\n              if (file) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 5:\n              if (!(file.size >= MAX_USER_COVER_IMAGE_SIZE)) {\n                _context.next = 9;\n                break;\n              }\n\n              message.error(\"File size should be less then \".concat(MAX_USER_COVER_IMAGE_SIZE / 1000000, \"MB\"));\n              setLoading(false);\n              return _context.abrupt(\"return\");\n\n            case 9:\n              _context.prev = 9;\n              _context.next = 12;\n              return client.mutate({\n                mutation: UPLOAD_PHOTO,\n                variables: {\n                  input: {\n                    id: auth.user.id,\n                    image: file,\n                    imagePublicId: coverImagePublicId,\n                    isCover: true\n                  }\n                },\n                refetchQueries: function refetchQueries() {\n                  return [{\n                    query: GET_FOLLOWED_POSTS,\n                    variables: {\n                      userId: auth.user.id\n                    }\n                  }, {\n                    query: GET_AUTH_USER\n                  }, {\n                    query: GET_USER,\n                    variables: {\n                      username: auth.user.username\n                    }\n                  }];\n                }\n              });\n\n            case 12:\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](9);\n              message.error(_context.t0.graphQLErrors[0].message);\n\n            case 17:\n              setLoading(false);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[9, 14]]);\n    }));\n\n    return function handleImageChange(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(Root, {\n    image: coverImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Input, {\n    name: \"coverImage\",\n    type: \"file\",\n    id: \"coverImage\",\n    onChange: handleImageChange,\n    accept: \"image/x-png,image/jpeg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), loading && React.createElement(Loading, {\n    top: \"xl\",\n    size: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), auth.user.id === userId && React.createElement(Label, {\n    htmlFor: \"coverImage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(UploadImageIcon, {\n    width: \"14\",\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })));\n};\n\nProfileCoverUpload.propTypes = {\n  client: PropTypes.object.isRequired,\n  userId: PropTypes.string.isRequired,\n  coverImagePublicId: PropTypes.string,\n  coverImage: PropTypes.string\n};\nexport default withApollo(ProfileCoverUpload);","map":{"version":3,"sources":["C:/Users/amand/OneDrive/Desktop/Social/create-social-network/hellobaby/frontend/src/pages/Profile/ProfileCoverUpload.js"],"names":["React","useState","PropTypes","styled","withApollo","UploadImageIcon","Loading","MAX_USER_COVER_IMAGE_SIZE","GET_AUTH_USER","GET_USER","UPLOAD_PHOTO","GET_FOLLOWED_POSTS","defaultBackgroundImage","useStore","useGlobalMessage","Root","div","p","image","theme","radius","md","shadows","sm","Input","input","Label","label","spacing","xxs","xs","ProfileCoverUpload","client","coverImagePublicId","coverImage","userId","auth","loading","setLoading","message","handleImageChange","e","file","target","files","value","size","error","mutate","mutation","variables","id","user","imagePublicId","isCover","refetchQueries","query","username","graphQLErrors","propTypes","object","isRequired","string"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { withApollo } from 'react-apollo';\r\n\r\nimport { UploadImageIcon } from 'components/icons';\r\nimport { Loading } from 'components/Loading';\r\n\r\nimport { MAX_USER_COVER_IMAGE_SIZE } from 'constants/ImageSize';\r\n\r\nimport { GET_AUTH_USER, GET_USER, UPLOAD_PHOTO } from 'graphql/user';\r\nimport { GET_FOLLOWED_POSTS } from 'graphql/post';\r\n\r\nimport defaultBackgroundImage from './background.jpg';\r\n\r\nimport { useStore } from 'store';\r\n\r\nimport { useGlobalMessage } from 'hooks/useGlobalMessage';\r\n\r\nconst Root = styled.div`\r\n  width: 100%;\r\n  height: 350px;\r\n  position: relative;\r\n  background-image: url(${p => (p.image ? p.image : defaultBackgroundImage)});\r\n  background-size: cover;\r\n  background-position: center;\r\n  border-bottom-left-radius: ${p => p.theme.radius.md};\r\n  border-bottom-right-radius: ${p => p.theme.radius.md};\r\n  box-shadow: ${p => p.theme.shadows.sm};\r\n`;\r\n\r\nconst Input = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  position: absolute;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  left: ${p => p.theme.spacing.sm};\r\n  top: ${p => p.theme.spacing.sm};\r\n  padding: ${p => p.theme.spacing.xxs} ${p => p.theme.spacing.xs};\r\n  border-radius: ${p => p.theme.radius.sm};\r\n  transition: background-color 0.4s;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n  }\r\n`;\r\n\r\n/**\r\n * Displays and Updates user Cover image\r\n */\r\nconst ProfileCoverUpload = ({\r\n  client,\r\n  coverImagePublicId,\r\n  coverImage,\r\n  userId,\r\n}) => {\r\n  const [{ auth }] = useStore();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const message = useGlobalMessage();\r\n\r\n  const handleImageChange = async e => {\r\n    setLoading(true);\r\n\r\n    const file = e.target.files[0];\r\n    e.target.value = '';\r\n\r\n    if (!file) return;\r\n\r\n    if (file.size >= MAX_USER_COVER_IMAGE_SIZE) {\r\n      message.error(\r\n        `File size should be less then ${MAX_USER_COVER_IMAGE_SIZE / 1000000}MB`\r\n      );\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await client.mutate({\r\n        mutation: UPLOAD_PHOTO,\r\n        variables: {\r\n          input: {\r\n            id: auth.user.id,\r\n            image: file,\r\n            imagePublicId: coverImagePublicId,\r\n            isCover: true,\r\n          },\r\n        },\r\n        refetchQueries: () => [\r\n          { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\r\n          { query: GET_AUTH_USER },\r\n          { query: GET_USER, variables: { username: auth.user.username } },\r\n        ],\r\n      });\r\n    } catch (err) {\r\n      message.error(err.graphQLErrors[0].message);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <Root image={coverImage}>\r\n      <Input\r\n        name=\"coverImage\"\r\n        type=\"file\"\r\n        id=\"coverImage\"\r\n        onChange={handleImageChange}\r\n        accept=\"image/x-png,image/jpeg\"\r\n      />\r\n\r\n      {loading && <Loading top=\"xl\" size=\"xl\" />}\r\n\r\n      {auth.user.id === userId && (\r\n        <Label htmlFor=\"coverImage\">\r\n          <UploadImageIcon width=\"14\" color=\"white\" />\r\n        </Label>\r\n      )}\r\n    </Root>\r\n  );\r\n};\r\n\r\nProfileCoverUpload.propTypes = {\r\n  client: PropTypes.object.isRequired,\r\n  userId: PropTypes.string.isRequired,\r\n  coverImagePublicId: PropTypes.string,\r\n  coverImage: PropTypes.string,\r\n};\r\n\r\nexport default withApollo(ProfileCoverUpload);\r\n"]},"metadata":{},"sourceType":"module"}